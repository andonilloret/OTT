// Generated by CoffeeScript 1.9.3
(function() {
  var FacebookStrategy, GoogleStrategy, LocalStrategy, api, passport, request;

  passport = require('passport');

  request = require('request');

  api = require('./api');

  FacebookStrategy = require('passport-facebook').Strategy;

  GoogleStrategy = require('passport-google-oauth').OAuth2Strategy;

  LocalStrategy = require('passport-local').Strategy;

  passport.use(new LocalStrategy(function(username, password, done) {
    return request.post({
      url: 'https://streammanager.co/api/customer/login',
      form: {
        email: username,
        password: password
      },
      headers: {
        'X-API-Token': 'de7255df3d8dc5aeac406b0a74d4a113'
      }
    }, function(err, httpResponse, body) {
      var response, user;
      if (!err) {
        response = JSON.parse(body);
        if (response.status === 'OK') {
          user = response.data.customer;
          return done(null, user);
        } else {
          return done(err);
        }
      }
    });
  }));

  passport.use(new FacebookStrategy({
    clientID: '818637501583457',
    clientSecret: '6ab85d8c37473b889925d339c5dc03cb',
    callbackURL: 'http://localhost:3000/auth/facebook/callback',
    enableProof: false
  }, function(accessToken, refreshToken, profile, done) {
    var user;
    console.log(profile);
    user = {
      facebookId: profile.id
    };
    return done(null, user);
  }));

  passport.use(new GoogleStrategy({
    clientID: '406258796547-h89e300irpnnkd7vvde0gnel299hrnv2.apps.googleusercontent.com',
    clientSecret: 'fw2c9pPUQ9m3rIQ52Fj7Stbz',
    callbackURL: 'http://localhost:3000/auth/google/callback'
  }, function(accessToken, refreshToken, profile, done) {
    return api.getCustomer("email=" + profile.emails[0].value, function(err, customer) {
      var user;
      customer = JSON.parse(customer.body);
      if (customer.data.length > 0) {
        user = {
          googleId: profile.id
        };
        return done(null, user);
      } else {
        return done(err);
      }
    });
  }));

  passport.serializeUser(function(user, done) {
    return done(null, user);
  });

  passport.deserializeUser(function(obj, done) {
    return done(null, obj);
  });

}).call(this);
